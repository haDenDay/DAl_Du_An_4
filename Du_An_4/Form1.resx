<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADcAGsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDx2ilpKRsLjHWijrRTGKylWKnqKY1OqS4ijj2COZZSVy21SAp9
        OetANXK5FSLbs0W8sqg5I3HGcelKsRL+Uy7WzksQcqO/+NNuJRLLlRtRRtQegoMWNiieZ9qAFsFuSBwB
        k9fYU2ppYYUt4JI7gSSOD5kewgxkHjnocjnimpEzRPIuCEIDDuM96pIkYq5NWYrcyMqrjJzn2HcmmQD2
        rUuLSSwiSOQKHnQSMVcN8p6LweOnIPOfpW8IXMpztoZ3l0uyrrhroRrFbKGijwxiQ5YDks3vjqfaofLr
        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
        meoJFTJ9k2LvefdjnCLjP51QpdxrOMjZxuf/2Q==
</value>
  </data>
</root>